#!/bin/bash

rulerAfterFirstRow=1

limitColWidth=0
maxColWidth=24

if (( $# > 0 )) ; then
  re="^[0-9]+$"
  if [[ $1 =~ $re ]]; then
    limitColWidth=1
    maxColWidth=$1
  fi
fi

# Read the rows into an array of lines.
lines=()
afterLines=()
n=0
foundRuler=0
while read -r line; do
  if !((foundRuler)); then
    if [ "${line:0:1}" == "+" ]; then
      ruler=$line; foundRuler=1;
    else
      echo "$line"
    fi
  elif ((foundRuler == 3)); then
    afterLines+=( " $line" )
  else
    asdf=print # silliness to avoid breaking syntax highlighting
    line=${line//[^[:$asdf:]]/ } # Blank out non-printables.
    if [ "${line:0:1}" != "+" ]; then
      lines+=( "$line" ); (( n++ ));
    else
      (( foundRuler++ ))
    fi
  fi
done

# Determine the number and length of each field/column in original table.
rulerSegments=${ruler/#+/}
rulerSegments=${ruler/%+/}
IFS='+' read -ra lengths <<< $rulerSegments

rulerDelims=${ruler//[^+]/}
m=${#rulerDelims}

# Determine column widths for new (transposed) table.
widths=()
newRuler='+'
rowNum=1
for fromRow in "${lines[@]}" ; do

  colWidth=0
  xj=2
  xm=${#lengths[1]}
  k=2
  for ((j=2;j<m;j++)) do

    field=${fromRow:$xj:$xm-1}
    shopt -s extglob
    field=${field/#*( )/}
    field=${field/%*( )/}
    shopt -u extglob

    fieldLen=${#field};
    if (( $fieldLen > $colWidth )); then colWidth=$fieldLen; fi

    xj=$(( xj+xm+1 ))
    xm=${#lengths[$k]}
    (( k++ ))
  done

  if ((rowNum>1 && limitColWidth)); then
    if (( $colWidth > $maxColWidth )); then colWidth=$maxColWidth; fi
  fi
  widths+=( "$colWidth" )
  printf -v nextSeg %$((colWidth))s;
  nextSeg=${nextSeg// /-}
  newRuler="$newRuler-$nextSeg-+"
  (( rowNum++ ))
done

echo "$newRuler"

# Output the columns in rows.
xi=2
xn=${#lengths[1]}
for ((i=2;i<m;i++)) do

  toRow="|"
  j=0
  for fromRow in "${lines[@]}" ; do

    field=${fromRow:$xi:$xn-1}
    shopt -s extglob
    field=${field/#*( )/}
    field=${field/%*( )/}
    shopt -u extglob

    colWidth=${widths[$j]}

    fieldWidth=${#field}
    colMark=' '
    if ((fieldWidth > colWidth)); then
      field=${field:$((fieldWidth-colWidth)):$colWidth}
      fieldWidth=${#field}
      colMark='<'
    fi

    colPad=''
    if ((colWidth > fieldWidth)); then
      printf -v colPad %$((colWidth-fieldWidth))s;
    fi

    field=$colPad$field
    toRow="$toRow$colMark$field |"
    (( j++ ))
  done

  toRow="$toRow"
  echo "$toRow"
  if ((rulerAfterFirstRow && i==2)); then
    echo "$newRuler"
  fi
  xi=$(( xi+xn+1 ))
  xn=${#lengths[$i]}
done

echo "$newRuler"

for line in "${afterLines[@]}" ; do
  echo "${line/ /}"
done

